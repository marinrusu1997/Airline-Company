<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QC6RXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAgAAIdpAAQAAAAB
        AAAAJgAAAAAAAZKGAAcAAAB6AAAAOAAAAABVTklDT0RFAABDAFIARQBBAFQATwBSADoAIABnAGQALQBq
        AHAAZQBnACAAdgAxAC4AMAAgACgAdQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA2ADIAKQAs
        ACAAcQB1AGEAbABpAHQAeQAgAD0AIAA4ADAACv/bAEMABgQFBgUEBgYFBgcHBggKEAoKCQkKFA4PDBAX
        FBgYFxQWFhodJR8aGyMcFhYgLCAjJicpKikZHy0wLSgwJSgpKP/bAEMBBwcHCggKEwoKEygaFhooKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKP/AABEIAFoBAAMBIgAC
        EQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0B
        AgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVG
        R0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
        uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAA
        AAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGh
        scEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1
        dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri
        4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/APqnFJS4oxQAYoxRijFABiijFGKADFGKMUmKAFxS
        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
        Jpy5vdZ//9k=
</value>
  </data>
  <data name="textBoxDescription.Text" xml:space="preserve">
    <value>Description
Întreprinderea de Stat Compania Aeriană Air Moldova este transportatorul național al Republicii Moldova, fiind lider pe piața autohtonă a transporturilor aeriene. Aceasta a fost fondată prin decret prezidențial la 12 ianuarie 1993. Are hub-ul pe Aeroportul Internațional Chișinău și operează 29 destinații cu 7 aeronave. Pe lângă pasageri compania aerienă Air Moldova transportă cargo și poștă. Air Moldova este membru IATA și ICAO.</value>
  </data>
</root>